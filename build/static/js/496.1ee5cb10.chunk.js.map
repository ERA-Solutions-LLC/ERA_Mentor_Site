{"version":3,"file":"static/js/496.1ee5cb10.chunk.js","mappings":"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","sources":["Pages/Home/Startup/EraSignUpForm.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport axios from 'axios';\r\n\r\nconst SignUpForm = () => {\r\n  const [error, setError] = useState('');\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: '',\r\n      confirmEmail: '',\r\n      phoneNumber: '',\r\n      password: '',\r\n      confirmPassword: ''\r\n    },\r\n    validationSchema: Yup.object().shape({\r\n      email: Yup.string().email('Invalid email format.').required('Email is required.'),\r\n      confirmEmail: Yup.string()\r\n        .oneOf([Yup.ref('email'), null], 'Emails must match.')\r\n        .required('Confirm email is required.'),\r\n      phoneNumber: Yup.string().required('Phone number is required.'),\r\n      password: Yup.string()\r\n        .matches(\r\n          /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{6,16}$/,\r\n          'Invalid password. Please make sure it is 6-16 characters long and contains at least 1 uppercase letter, 1 lowercase letter, 1 special character, and 1 number.'\r\n        )\r\n        .required('Password is required.'),\r\n      confirmPassword: Yup.string()\r\n        .oneOf([Yup.ref('password'), null], 'Passwords must match.')\r\n        .required('Confirm password is required.')\r\n    }),\r\n    onSubmit: async (values) => {\r\n      try {\r\n        // Make API call to register the user\r\n        await axios.post('/api/signup', values);\r\n        // Redirect to login page or display success message\r\n      } catch (error) {\r\n        setError('An error occurred during sign-up. Please try again.'); // Set error message based on server response\r\n      }\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div className=\"flex justify-center items-center h-screen\">\r\n      <form className=\"w-2/5 bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4\" onSubmit={formik.handleSubmit}>\r\n        <div className=\"mb-4\">\r\n          <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"email\">\r\n            Email\r\n          </label>\r\n          <input\r\n            className={`appearance-none border ${\r\n              formik.touched.email && formik.errors.email ? 'border-red-500' : 'border-gray-300'\r\n            } rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline`}\r\n            id=\"email\"\r\n            name=\"email\"\r\n            type=\"email\"\r\n            placeholder=\"Enter your email\"\r\n            value={formik.values.email}\r\n            onChange={formik.handleChange}\r\n            onBlur={formik.handleBlur}\r\n          />\r\n          {formik.touched.email && formik.errors.email && (\r\n            <p className=\"text-red-500 text-xs italic\">{formik.errors.email}</p>\r\n          )}\r\n        </div>\r\n        {/* Confirm Email */}\r\n        <div className=\"mb-4\">\r\n          <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"confirmEmail\">\r\n            Confirm Email\r\n          </label>\r\n          <input\r\n            className={`appearance-none border ${\r\n              formik.touched.confirmEmail && formik.errors.confirmEmail ? 'border-red-500' : 'border-gray-300'\r\n            } rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline`}\r\n           id=\"confirmEmail\"\r\n            name=\"confirmEmail\"\r\n            type=\"email\"\r\n            placeholder=\"Confirm your email\"\r\n            value={formik.values.confirmEmail}\r\n            onChange={formik.handleChange}\r\n            onBlur={formik.handleBlur}\r\n          />\r\n          {formik.touched.confirmEmail && formik.errors.confirmEmail && (\r\n            <p className=\"text-red-500 text-xs italic\">{formik.errors.confirmEmail}</p>\r\n          )}\r\n        </div>\r\n        {/* Phone Number */}\r\n        <div className=\"mb-4\">\r\n          <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"phoneNumber\">\r\n            Phone Number\r\n          </label>\r\n          <input\r\n            className={`appearance-none border ${\r\n              formik.touched.phoneNumber && formik.errors.phoneNumber ? 'border-red-500' : 'border-gray-300'\r\n            } rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline`}\r\n            id=\"phoneNumber\"\r\n            name=\"phoneNumber\"\r\n            type=\"text\"\r\n            placeholder=\"Enter your phone number\"\r\n            value={formik.values.phoneNumber}\r\n            onChange={formik.handleChange}\r\n            onBlur={formik.handleBlur}\r\n          />\r\n          {formik.touched.phoneNumber && formik.errors.phoneNumber && (\r\n            <p className=\"text-red-500 text-xs italic\">{formik.errors.phoneNumber}</p>\r\n          )}\r\n        </div>\r\n        {/* Password */}\r\n        <div className=\"mb-4\">\r\n          <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"password\">\r\n            Password\r\n          </label>\r\n          <input\r\n            className={`appearance-none border ${\r\n              formik.touched.password && formik.errors.password ? 'border-red-500' : 'border-gray-300'\r\n            } rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline`}\r\n            id=\"password\"\r\n            name=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"Enter your password\"\r\n            value={formik.values.password}\r\n            onChange={formik.handleChange}\r\n            onBlur={formik.handleBlur}\r\n          />\r\n          {formik.touched.password && formik.errors.password && (\r\n            <p className=\"text-red-500 text-xs italic\">{formik.errors.password}</p>\r\n          )}\r\n        </div>\r\n        {/* Confirm Password */}\r\n        <div className=\"mb-4\">\r\n          <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"confirmPassword\">\r\n            Confirm Password\r\n          </label>\r\n          <input\r\n            className={`appearance-none border ${\r\n              formik.touched.confirmPassword && formik.errors.confirmPassword\r\n                ? 'border-red-500'\r\n                : 'border-gray-300'\r\n            } rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline`}\r\n            id=\"confirmPassword\"\r\n            name=\"confirmPassword\"\r\n            type=\"password\"\r\n            placeholder=\"Confirm your password\"\r\n            value={formik.values.confirmPassword}\r\n            onChange={formik.handleChange}\r\n            onBlur={formik.handleBlur}\r\n          />\r\n          {formik.touched.confirmPassword && formik.errors.confirmPassword && (\r\n            <p className=\"text-red-500 text-xs italic\">{formik.errors.confirmPassword}</p>\r\n          )}\r\n        </div>\r\n        {error && <p className=\"text-red-500 text-xs italic\">{error}</p>}\r\n        <div className=\"flex items-center justify-between\">\r\n          <button\r\n            className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\"\r\n            type=\"submit\"\r\n          >\r\n            Sign Up\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignUpForm;\r\n\r\n"],"names":["_useState","useState","_useState2","_slicedToArray","error","setError","formik","useFormik","initialValues","email","confirmEmail","phoneNumber","password","confirmPassword","validationSchema","Yup","shape","required","oneOf","matches","onSubmit","_onSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","wrap","_context","prev","next","axios","post","t0","stop","_x","apply","arguments","_jsx","className","children","_jsxs","handleSubmit","htmlFor","concat","touched","errors","id","name","type","placeholder","value","onChange","handleChange","onBlur","handleBlur"],"sourceRoot":""}