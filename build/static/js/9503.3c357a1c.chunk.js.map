{"version":3,"file":"static/js/9503.3c357a1c.chunk.js","mappings":"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","sources":["Pages/Home/Startup/EraEmployeeUpdateForm.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst EmployeeUpdateForm = () => {\r\n  const { id } = useParams();\r\n  const history = useNavigate();\r\n  const [formData, setFormData] = useState({\r\n    jobTitle: '',\r\n    certifications: '',\r\n    startDate: '',\r\n    addressLine1: '',\r\n    addressLine2: '',\r\n    city: '',\r\n    state: '',\r\n    zipcode: '',\r\n    salary: '',\r\n    training: ''\r\n  });\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchEmployeeData = async () => {\r\n      try {\r\n        const response = await axios.get(`/api/employee/${id}`);\r\n        setFormData(response.data);\r\n      } catch (error) {\r\n        setError('Failed to fetch employee data.');\r\n      }\r\n    };\r\n\r\n    fetchEmployeeData();\r\n  }, [id]);\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n    //   await axios.put(`/api/employee/${id}`, formData);\r\n      history.push('/employee-dashboard');\r\n    } catch (error) {\r\n      setError('Failed to update employee profile.');\r\n    }\r\n  };\r\n\r\n//   if (!formData) {\r\n//     return <div>Loading...</div>;\r\n//   }\r\n\r\n  return (\r\n    <div className=\"p-4\">\r\n      <h1 className=\"text-2xl font-bold mb-4\">Update Employee Profile</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"mb-4\">\r\n          <label htmlFor=\"jobTitle\">Job Title</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"jobTitle\"\r\n            name=\"jobTitle\"\r\n            value={formData.jobTitle}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"mb-4\">\r\n          <label htmlFor=\"certifications\">Certifications</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"certifications\"\r\n            name=\"certifications\"\r\n            value={formData.certifications}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"mb-4\">\r\n          <label htmlFor=\"startDate\">Start Date</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"startDate\"\r\n            name=\"startDate\"\r\n            value={formData.startDate}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"mb-4\">\r\n          <label htmlFor=\"addressLine1\">Address Line 1</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"addressLine1\"\r\n            name=\"addressLine1\"\r\n            value={formData.addressLine1}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"mb-4\">\r\n          <label htmlFor=\"addressLine2\">Address Line 2</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"addressLine2\"\r\n            name=\"addressLine2\"\r\n            value={formData.addressLine2}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"mb-4\">\r\n          <label htmlFor=\"city\">City</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"city\"\r\n            name=\"city\"\r\n            value={formData.city}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"mb-4\">\r\n          <label htmlFor=\"state\">State</label>\r\n          <input\r\n            type=\"text\"            \r\n            id=\"state\"\r\n            name=\"state\"\r\n            value={formData.state}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"mb-4\">\r\n          <label htmlFor=\"zipcode\">Zipcode</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"zipcode\"\r\n            name=\"zipcode\"\r\n            value={formData.zipcode}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"mb-4\">\r\n          <label htmlFor=\"salary\">Salary</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"salary\"\r\n            name=\"salary\"\r\n            value={formData.salary}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"mb-4\">\r\n          <label htmlFor=\"training\">Training</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"training\"\r\n            name=\"training\"\r\n            value={formData.training}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        {error && <p>{error}</p>}\r\n        <button type=\"submit\" className=\"bg-blue-500 text-white px-4 py-2 rounded\">\r\n          Update Profile\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmployeeUpdateForm;\r\n"],"names":["id","useParams","history","useNavigate","_useState","useState","jobTitle","certifications","startDate","addressLine1","addressLine2","city","state","zipcode","salary","training","_useState2","_slicedToArray","formData","setFormData","_useState3","_useState4","error","setError","useEffect","fetchEmployeeData","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","axios","get","concat","sent","data","t0","stop","apply","arguments","handleChange","e","_objectSpread","_defineProperty","target","name","value","handleSubmit","_ref2","_callee2","_context2","preventDefault","push","_x","_jsxs","className","children","_jsx","onSubmit","htmlFor","type","onChange"],"sourceRoot":""}