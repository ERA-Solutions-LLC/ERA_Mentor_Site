{"version":3,"file":"static/js/4909.7f7051e5.chunk.js","mappings":"mNAiGA,UA3FkB,WAChB,IAAMA,GAAUC,EAAAA,EAAAA,MAChBC,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GAEhBI,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbC,MAAO,GACPC,SAAU,IAEZC,iBAAkBC,EAAAA,KAAaC,MAAM,CACnCJ,MAAOG,EAAAA,KAAaH,MAAM,yBAAyBK,SAAS,sBAC5DJ,SAAUE,EAAAA,KACPG,QACC,4EACA,kKAEDD,SAAS,2BAEdE,SAAS,WAAD,IAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAAC,EAAOC,GAAM,IAAAC,EAAA,OAAAJ,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEIC,EAAAA,EAAMC,KAAK,aAAcP,GAAQ,KAAD,EAAjDC,EAAQE,EAAAK,KACIP,EAASQ,KAAKC,MAAxBA,MAGJlC,EAAQmC,KAAK,iBAEbnC,EAAQmC,KAAK,uBAChBR,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAS,GAAAT,EAAA,SAEDpB,EAAS,8BAA+B,yBAAAoB,EAAAU,OAAA,GAAAd,EAAA,kBAE3C,gBAAAe,GAAA,OAAAnB,EAAAoB,MAAA,KAAAC,UAAA,EAbQ,KAgBX,OACEC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,4CAA2CC,UACxDC,EAAAA,EAAAA,MAAA,QAAMF,UAAU,uDAAuDxB,SAAUV,EAAOqC,aAAaF,SAAA,EACnGC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,OAAMC,SAAA,EACnBF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,6CAA6CI,QAAQ,QAAOH,SAAC,WAG9EF,EAAAA,EAAAA,KAAA,SACEC,UAAS,0BAAAK,OACPvC,EAAOwC,QAAQrC,OAASH,EAAOyC,OAAOtC,MAAQ,iBAAmB,kBAAiB,iGAEpFuC,GAAG,QACHC,KAAK,QACLC,KAAK,QACLC,YAAY,mBACZC,MAAO9C,EAAOgB,OAAOb,MACrB4C,SAAU/C,EAAOgD,aACjBC,OAAQjD,EAAOkD,aAEhBlD,EAAOwC,QAAQrC,OAASH,EAAOyC,OAAOtC,QACrC8B,EAAAA,EAAAA,KAAA,KAAGC,UAAU,8BAA6BC,SAAEnC,EAAOyC,OAAOtC,YAG9DiC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,OAAMC,SAAA,EACnBF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,6CAA6CI,QAAQ,WAAUH,SAAC,cAGjFF,EAAAA,EAAAA,KAAA,SACEC,UAAS,0BAAAK,OACPvC,EAAOwC,QAAQpC,UAAYJ,EAAOyC,OAAOrC,SAAW,iBAAmB,kBAAiB,iGAE1FsC,GAAG,WACHC,KAAK,WACLC,KAAK,WACLC,YAAY,sBACZC,MAAO9C,EAAOgB,OAAOZ,SACrB2C,SAAU/C,EAAOgD,aACjBC,OAAQjD,EAAOkD,aAEhBlD,EAAOwC,QAAQpC,UAAYJ,EAAOyC,OAAOrC,WACxC6B,EAAAA,EAAAA,KAAA,KAAGC,UAAU,8BAA6BC,SAAEnC,EAAOyC,OAAOrC,cAG7DN,IAASmC,EAAAA,EAAAA,KAAA,KAAGC,UAAU,8BAA6BC,SAAErC,KACtDmC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oCAAmCC,UAChDF,EAAAA,EAAAA,KAAA,UACEC,UAAU,+GACVU,KAAK,SAAQT,SACd,kBAOX,C","sources":["Pages/Home/Startup/EraLoginForm.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst LoginForm = () => {\r\n  const history = useNavigate();\r\n  const [error, setError] = useState('');\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: '',\r\n      password: ''\r\n    },\r\n    validationSchema: Yup.object().shape({\r\n      email: Yup.string().email('Invalid email format.').required('Email is required.'),\r\n      password: Yup.string()\r\n        .matches(\r\n          /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{6,16}$/,\r\n          'Invalid password. Please make sure it is 6-16 characters long and contains at least 1 uppercase letter, 1 lowercase letter, 1 special character, and 1 number.'\r\n        )\r\n        .required('Password is required.')\r\n    }),\r\n    onSubmit: async (values) => {\r\n      try {\r\n        const response = await axios.post('/api/login', values);\r\n        const { is_hr } = response.data.is_hr;\r\n\r\n        if (is_hr) {\r\n            history.push('/hr-dashboard'); // Redirect to HrDashboard component\r\n        } else {\r\n            history.push('/employee-dashboard'); // Redirect to EmployeeDashboard component\r\n        }\r\n      } catch (error) {\r\n        setError('Invalid email or password.'); // Set error message based on server response\r\n      }\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div className=\"flex justify-center items-center h-screen\">\r\n      <form className=\"w-2/5 bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4\" onSubmit={formik.handleSubmit}>\r\n        <div className=\"mb-4\">\r\n          <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"email\">\r\n            Email\r\n          </label>\r\n          <input\r\n            className={`appearance-none border ${\r\n              formik.touched.email && formik.errors.email ? 'border-red-500' : 'border-gray-300'\r\n            } rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline`}\r\n            id=\"email\"\r\n            name=\"email\"\r\n            type=\"email\"\r\n            placeholder=\"Enter your email\"\r\n            value={formik.values.email}\r\n            onChange={formik.handleChange}\r\n            onBlur={formik.handleBlur}\r\n          />\r\n          {formik.touched.email && formik.errors.email && (\r\n            <p className=\"text-red-500 text-xs italic\">{formik.errors.email}</p>\r\n          )}\r\n        </div>\r\n        <div className=\"mb-6\">\r\n          <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"password\">\r\n            Password\r\n          </label>\r\n          <input\r\n            className={`appearance-none border ${\r\n              formik.touched.password && formik.errors.password ? 'border-red-500' : 'border-gray-300'\r\n            } rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline`}\r\n            id=\"password\"\r\n            name=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"Enter your password\"\r\n            value={formik.values.password}\r\n            onChange={formik.handleChange}\r\n            onBlur={formik.handleBlur}\r\n          />\r\n          {formik.touched.password && formik.errors.password && (\r\n            <p className=\"text-red-500 text-xs italic\">{formik.errors.password}</p>\r\n          )}\r\n        </div>\r\n        {error && <p className=\"text-red-500 text-xs italic\">{error}</p>}\r\n        <div className=\"flex items-center justify-between\">\r\n          <button\r\n            className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\"\r\n            type=\"submit\"\r\n          >\r\n            Sign In\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n"],"names":["history","useNavigate","_useState","useState","_useState2","_slicedToArray","error","setError","formik","useFormik","initialValues","email","password","validationSchema","Yup","shape","required","matches","onSubmit","_onSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","response","wrap","_context","prev","next","axios","post","sent","data","is_hr","push","t0","stop","_x","apply","arguments","_jsx","className","children","_jsxs","handleSubmit","htmlFor","concat","touched","errors","id","name","type","placeholder","value","onChange","handleChange","onBlur","handleBlur"],"sourceRoot":""}